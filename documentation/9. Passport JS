Passport JS

There are only two components you will need to remember about Passport JS components/libraries:

	> Passport
		It is the library responsible to handle the authentication

	> Passport Strategies
		Passport allows you to login at any specific Site that implements the OAuth authenticantion flow, such as Google, Twitter, Facebook, Github, etc. 

	1. Intalling Passport JS and Google Strategy 

		> Go to your terminal and type:

			$ npm install --save passport passport-google-oauth20

	2. Configuring Passport

		At your index.js file do the following:

		> Import library and Strategy

			_. const passport = require('passport');
			_. const GoogleStrategy = require('passport-google-oauth20').Strategy;

		> Configure the Passport with the Google Strategy

			_. passport.use(new GoogleStrategy());	


	3. Configuring the App to be able to send authentication requests to Google

		> Go to http://console.developers.google.com/

		> After you have loged in, create a New Project. We will create one named 'Node Google OAuth Raw Project'

		> After your project have been created, select it.

		> Then enable the Google API to be able to handle OAuth 

			1. Click on "Enable APIs and Services"

			2. Search for "Google+ API" (yes! Google+ instead of OAuth ¬¬) and click on that.

			3. Click on "Enable API"

		> Configuring the OAuth Credentials

			1. After it has been enabled, go to Credentials menu, click on "Create Credentials" and into the oppened menu, click on the "OAuth client ID".

			2. After "OAuth client ID" has already been enabled, click on the "Configure consent screen", and:

				> Configure the "Product name shown to users", click on save

				> As Application Type, select "Web Application", and on its configurations do the following:

					> On Restrictions/Authorized JavaScript origins, add:

						http://localhost:5000

						obs.: the same port you have configured into your application.

					> On Restrictions/Authorized redirect URIs, add:

						http://localhost:5000/*

					> Click on Create

				> A popup will be shown with the ClientID and the ClientSecret, copy and save them into a secure local.						


For more information about Passport JS, please visit the page http://www.passportjs.org/